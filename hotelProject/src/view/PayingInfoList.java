
package view;

import controller.RentController;
import java.util.List;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.RentInfo;


public class PayingInfoList extends javax.swing.JFrame {

    /**
     * Creates new form PayingManageFrm
     */
    public PayingInfoList() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        DeleteNoteLabel = new javax.swing.JLabel();
        SearchNameLabel = new javax.swing.JLabel();
        SearchTextField = new javax.swing.JTextField();
        SearchButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        PayingInfoListTable = new javax.swing.JTable();
        NoteLabel = new javax.swing.JLabel();
        SelectNameLabel = new javax.swing.JLabel();
        DeleteTextField = new javax.swing.JTextField();
        DeleteButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Invoicing management");
        setLocation(new java.awt.Point(480, 280));

        DeleteNoteLabel.setFont(new java.awt.Font("Œ¢»Ì—≈∫⁄", 0, 12)); // NOI18N
        DeleteNoteLabel.setForeground(new java.awt.Color(102, 102, 102));
        DeleteNoteLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Ã· æ.png"))); // NOI18N
        DeleteNoteLabel.setText("£®Delete the selected data in the table£©");

        SearchNameLabel.setFont(new java.awt.Font("Œ¢»Ì—≈∫⁄", 0, 14)); // NOI18N
        SearchNameLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/…Ì∑›÷§’˝√Ê.png"))); // NOI18N
        SearchNameLabel.setText("Please enter your ID name:");

        SearchTextField.setFont(new java.awt.Font("Œ¢»Ì—≈∫⁄", 0, 12)); // NOI18N
        SearchTextField.setForeground(new java.awt.Color(153, 153, 153));
        SearchTextField.setToolTipText("123");
        SearchTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchTextFieldActionPerformed(evt);
            }
        });

        SearchButton.setFont(new java.awt.Font("Œ¢»Ì—≈∫⁄", 0, 14)); // NOI18N
        SearchButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/≤È—Ø.png"))); // NOI18N
        SearchButton.setText("Search");
        SearchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchButtonActionPerformed(evt);
            }
        });

        PayingInfoListTable.setFont(new java.awt.Font("Œ¢»Ì—≈∫⁄", 0, 14)); // NOI18N
        PayingInfoListTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID Number", "Name", "Rent Days", "Antecedent Money", "Cost Fee"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        PayingInfoListTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PayingInfoListTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(PayingInfoListTable);

        NoteLabel.setFont(new java.awt.Font("Œ¢»Ì—≈∫⁄", 0, 12)); // NOI18N
        NoteLabel.setForeground(new java.awt.Color(102, 102, 102));
        NoteLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Ã· æ.png"))); // NOI18N
        NoteLabel.setText("(If no input, all data will be returned by default)");

        SelectNameLabel.setFont(new java.awt.Font("Œ¢»Ì—≈∫⁄", 0, 14)); // NOI18N
        SelectNameLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/…Ì∑›÷§’˝√Ê.png"))); // NOI18N
        SelectNameLabel.setText("Selected ID:");

        DeleteTextField.setFont(new java.awt.Font("Œ¢»Ì—≈∫⁄", 0, 12)); // NOI18N
        DeleteTextField.setForeground(new java.awt.Color(153, 153, 153));
        DeleteTextField.setToolTipText("123");
        DeleteTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteTextFieldActionPerformed(evt);
            }
        });

        DeleteButton.setFont(new java.awt.Font("Œ¢»Ì—≈∫⁄", 0, 14)); // NOI18N
        DeleteButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/ºı…Ÿ.png"))); // NOI18N
        DeleteButton.setText("Check Out");
        DeleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(SearchNameLabel)
                                .addGap(18, 18, 18)
                                .addComponent(SearchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(42, 42, 42)
                                .addComponent(SearchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(27, 27, 27)
                                .addComponent(NoteLabel))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(SelectNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(DeleteTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(40, 40, 40)
                                .addComponent(DeleteButton)
                                .addGap(18, 18, 18)
                                .addComponent(DeleteNoteLabel)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SearchNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SearchButton)
                    .addComponent(NoteLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                    .addComponent(SearchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SelectNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DeleteTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DeleteButton)
                    .addComponent(DeleteNoteLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SearchTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SearchTextFieldActionPerformed

    private void SearchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchButtonActionPerformed
        // Search Button :Create the data table and connect to the database
        DefaultTableModel table = (DefaultTableModel) PayingInfoListTable.getModel();
        table.setRowCount(0);
        RentController rentDB = new RentController();
        RentInfo rentInfo = new RentInfo();
        rentInfo.setGuestName(SearchTextField.getText().toString());
        //Add each column
        List<RentInfo> rentList = rentDB.getRentList(rentInfo);
        for (RentInfo rentInfoItem : rentList) {
            Vector v = new Vector();
            v.add(rentInfoItem.getGuestIDnumber());
            v.add(rentInfoItem.getGuestName());
//            v.add(rentInfoItem.getRentType());
//            v.add(rentInfoItem.getRoomType());
            v.add(rentInfoItem.getRentDays());
            v.add("$ "+rentInfoItem.getAntecedentMoney());
//            v.add(rentInfoItem.getRemark());
            //Add a method to calculate consumption by room type;
            int cost = 0;
            if ("Hour Room".equals(rentInfoItem.getRentType())) {
                if ("Single Room".equals(rentInfoItem.getRoomType())) {
                    cost = (60 * rentInfoItem.getRentDays())-rentInfoItem.getAntecedentMoney();
                }
                if ("Double Room".equals(rentInfoItem.getRoomType())) {
                    cost = 90 * rentInfoItem.getRentDays();
                }
                if ("Family Room".equals(rentInfoItem.getRoomType())) {
                    cost = 120 * rentInfoItem.getRentDays();
                }
            }
            if ("Standard Room".equals(rentInfoItem.getRentType())) {
                if ("Single Room".equals(rentInfoItem.getRoomType())) {
                    cost = 100 * rentInfoItem.getRentDays();
                }
                if ("Double Room".equals(rentInfoItem.getRoomType())) {
                    cost = 150 * rentInfoItem.getRentDays();
                }
                if ("Family Room".equals(rentInfoItem.getRoomType())) {
                    cost = 200 * rentInfoItem.getRentDays();
                }
            }

            v.add("$ "+cost);
            table.addRow(v);
        }
        //close rentDB;
        rentDB.closeBaseDB();
    }//GEN-LAST:event_SearchButtonActionPerformed

    private void PayingInfoListTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PayingInfoListTableMouseClicked
        // TODO add your handling code here:
        //∂‘±Ì∏Òµƒselect≤Ÿ◊˜  ListTable
        DefaultTableModel dft = (DefaultTableModel) PayingInfoListTable.getModel();
        DeleteTextField.setText(dft.getValueAt(PayingInfoListTable.getSelectedRow(), 0).toString());
    }//GEN-LAST:event_PayingInfoListTableMouseClicked

    private void DeleteTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DeleteTextFieldActionPerformed

    private void DeleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteButtonActionPerformed
        //Delete the selected database information and import it into the rent table
        if (JOptionPane.showConfirmDialog(this, "Are you sure to delete it?") != JOptionPane.OK_OPTION) {
            return;
        }
        int index = PayingInfoListTable.getSelectedRow();
        if (index == -1) {
            JOptionPane.showMessageDialog(this, "Select the data to delete from the table!");
            return;
        }
        DefaultTableModel dft = (DefaultTableModel) PayingInfoListTable.getModel();
        String SelectedId = dft.getValueAt(PayingInfoListTable.getSelectedRow(), 0).toString();
        RentController rentDB = new RentController();
        if (rentDB.delete(SelectedId)) {
            JOptionPane.showMessageDialog(this, "successfully delete!");
        } else {
            JOptionPane.showMessageDialog(this, "fail to delete!");
        }
        rentDB.closeBaseDB();
        //        setTable(new RentInfo());
        dft.setRowCount(0);
    }//GEN-LAST:event_DeleteButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PayingInfoList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PayingInfoList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PayingInfoList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PayingInfoList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PayingInfoList().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton DeleteButton;
    private javax.swing.JLabel DeleteNoteLabel;
    private javax.swing.JTextField DeleteTextField;
    private javax.swing.JLabel NoteLabel;
    private javax.swing.JTable PayingInfoListTable;
    private javax.swing.JButton SearchButton;
    private javax.swing.JLabel SearchNameLabel;
    private javax.swing.JTextField SearchTextField;
    private javax.swing.JLabel SelectNameLabel;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
