/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.RentController;
import controller.ReserveController;
import java.util.List;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.RentInfo;
import model.ReserveInfo;

/**
 *
 * @author hasee
 */
public class ReserveInfoList extends javax.swing.JFrame {

    /**
     * Creates new form ReserveManageFrm
     */
    public ReserveInfoList() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        SecondLabel = new javax.swing.JLabel();
        DeleteTextField = new javax.swing.JTextField();
        AcceptButton = new javax.swing.JButton();
        RefuseButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        ListTable = new javax.swing.JTable();
        CheckButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setLocation(new java.awt.Point(480, 280));

        SecondLabel.setFont(new java.awt.Font("微软雅黑", 0, 14)); // NOI18N
        SecondLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/身份证正面.png"))); // NOI18N
        SecondLabel.setText("选中的预订者ID：");

        DeleteTextField.setFont(new java.awt.Font("微软雅黑", 0, 12)); // NOI18N
        DeleteTextField.setForeground(new java.awt.Color(153, 153, 153));
        DeleteTextField.setToolTipText("123");
        DeleteTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteTextFieldActionPerformed(evt);
            }
        });

        AcceptButton.setFont(new java.awt.Font("微软雅黑", 0, 14)); // NOI18N
        AcceptButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/增加.png"))); // NOI18N
        AcceptButton.setText("Accept");
        AcceptButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AcceptButtonActionPerformed(evt);
            }
        });

        RefuseButton.setFont(new java.awt.Font("微软雅黑", 0, 14)); // NOI18N
        RefuseButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/减少.png"))); // NOI18N
        RefuseButton.setText("Refuse");
        RefuseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RefuseButtonActionPerformed(evt);
            }
        });

        ListTable.setFont(new java.awt.Font("微软雅黑", 0, 14)); // NOI18N
        ListTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "ID Number", "Name", "Rent Type", "Room Type", "Rent Days", "Remark", "Result"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        ListTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ListTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(ListTable);

        CheckButton.setFont(new java.awt.Font("微软雅黑", 0, 14)); // NOI18N
        CheckButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/帮助.png"))); // NOI18N
        CheckButton.setText("CheckAll");
        CheckButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CheckButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(SecondLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(DeleteTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addComponent(CheckButton, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(AcceptButton, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(RefuseButton, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 21, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AcceptButton)
                    .addComponent(RefuseButton)
                    .addComponent(DeleteTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SecondLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CheckButton))
                .addGap(24, 24, 24)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void AcceptButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AcceptButtonActionPerformed
        // TODO add your handling code here:
        if (JOptionPane.showConfirmDialog(this, "您确定接受用户预订吗？") != JOptionPane.OK_OPTION) {
            return;
        }
        int index = ListTable.getSelectedRow();
        if (index == -1) {
            JOptionPane.showMessageDialog(this, "请从表中选中要处理的的一条预订数据!");
            return;
        }
        DefaultTableModel dft = (DefaultTableModel) ListTable.getModel();
        String SelectedId = dft.getValueAt(ListTable.getSelectedRow(), 0).toString();
        String SelectedName = dft.getValueAt(ListTable.getSelectedRow(), 1).toString();
        String SelectedRentType = dft.getValueAt(ListTable.getSelectedRow(), 2).toString();
        String SelectedRoomType = dft.getValueAt(ListTable.getSelectedRow(), 3).toString();
        int SelectedRentDays = Integer.parseInt(dft.getValueAt(ListTable.getSelectedRow(), 4).toString());
        String SelectedRemark = dft.getValueAt(ListTable.getSelectedRow(), 5).toString();

        ReserveController reserveDB = new ReserveController();
        if (reserveDB.delete(SelectedId)) {

            ReserveInfo reserveInfo = new ReserveInfo();
            reserveInfo.setGuestIDnumber(SelectedId);
            reserveInfo.setGuestName(SelectedName);
            reserveInfo.setRentDays(SelectedRentDays);
            reserveInfo.setRentType(SelectedRentType);
            reserveInfo.setRoomType(SelectedRoomType);
            reserveInfo.setRemark(SelectedRemark);
            reserveInfo.setResult(true);
            reserveDB.addRent(reserveInfo);

            RentInfo rentInfo = new RentInfo();
            rentInfo.setGuestIDnumber(SelectedId);
            rentInfo.setGuestName(SelectedName);
            rentInfo.setRentDays(SelectedRentDays);
            rentInfo.setRentType(SelectedRentType);
            rentInfo.setRoomType(SelectedRoomType);
            rentInfo.setAntecedentMoney(0);
            rentInfo.setRemark(SelectedRemark);
            RentController rentDB = new RentController();
            if (rentDB.addRent(rentInfo)) {
                System.out.println("成功将预订请求添加到住房表信息添加成功");
            }
            rentDB.closeBaseDB();

            JOptionPane.showMessageDialog(this, "成功接受预订!");
        } else {
            JOptionPane.showMessageDialog(this, "接受预订失败!");
        }
        reserveDB.closeBaseDB();
        //        setTable(new RentInfo());
        checkAll();
    }//GEN-LAST:event_AcceptButtonActionPerformed

    private void RefuseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RefuseButtonActionPerformed
        // TODO add your handling code here:
        //删除选中的数据库信息
        if (JOptionPane.showConfirmDialog(this, "您确定拒绝该用户预订吗？") != JOptionPane.OK_OPTION) {
            return;
        }
        int index = ListTable.getSelectedRow();
        if (index == -1) {
            JOptionPane.showMessageDialog(this, "请从表中选中要处理的的一条预订数据!");
            return;
        }
        DefaultTableModel dft = (DefaultTableModel) ListTable.getModel();
        String SelectedId = dft.getValueAt(ListTable.getSelectedRow(), 0).toString();
        ReserveController reserveDB = new ReserveController();
        if (reserveDB.delete(SelectedId)) {

            JOptionPane.showMessageDialog(this, "成功拒绝预订!");
        } else {
            JOptionPane.showMessageDialog(this, "拒绝预订失败!");
        }
        reserveDB.closeBaseDB();
        checkAll();
    }//GEN-LAST:event_RefuseButtonActionPerformed

    private void ListTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ListTableMouseClicked
        // TODO add your handling code here:
        //对表格的select操作  ListTable
        DefaultTableModel dft = (DefaultTableModel) ListTable.getModel();
        DeleteTextField.setText(dft.getValueAt(ListTable.getSelectedRow(), 0).toString());
    }//GEN-LAST:event_ListTableMouseClicked

    private void DeleteTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DeleteTextFieldActionPerformed

    private void CheckButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CheckButtonActionPerformed
        // TODO add your handling code here: 查询预订表的信息
        checkAll();
    }//GEN-LAST:event_CheckButtonActionPerformed

    public void checkAll() {
        DefaultTableModel table = (DefaultTableModel) ListTable.getModel();
        table.setRowCount(0);
        ReserveController reserveDB = new ReserveController();
        ReserveInfo reserveInfo = new ReserveInfo();
        reserveInfo.setGuestName(null);
        List<ReserveInfo> rentList = reserveDB.getRentList(reserveInfo);
        for (ReserveInfo rentInfoItem : rentList) {
            Vector v = new Vector();
            v.add(rentInfoItem.getGuestIDnumber());
            v.add(rentInfoItem.getGuestName());
            v.add(rentInfoItem.getRentType());
            v.add(rentInfoItem.getRoomType());
            v.add(rentInfoItem.getRentDays());
            v.add(rentInfoItem.getRemark());
            v.add(rentInfoItem.getResult());
            table.addRow(v);
        }
        reserveDB.closeBaseDB();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ReserveInfoList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ReserveInfoList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ReserveInfoList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ReserveInfoList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ReserveInfoList().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AcceptButton;
    private javax.swing.JButton CheckButton;
    private javax.swing.JTextField DeleteTextField;
    private javax.swing.JTable ListTable;
    private javax.swing.JButton RefuseButton;
    private javax.swing.JLabel SecondLabel;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
